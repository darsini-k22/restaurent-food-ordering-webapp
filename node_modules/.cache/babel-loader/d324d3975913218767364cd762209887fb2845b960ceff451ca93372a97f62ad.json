{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\darsi\\\\OneDrive\\\\Documents\\\\GitHub\\\\Udemy\\\\Food_ordering\\\\01-starting-project\\\\src\\\\components\\\\Cart\\\\Checkout.js\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from 'react';\nimport classes from './Checkout.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Checkout = props => {\n  _s();\n  const [formValidity, setFormValidity] = useState({\n    name: true,\n    city: true,\n    street: true,\n    postalCode: true\n  });\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const cityInputRef = useRef();\n  const postalCodeInputRef = useRef();\n  const isValid = value => value.trim() == '';\n  const isFiveChar = value => value.trim().length !== 5;\n  const confirmHandler = event => {\n    event.preventDefault();\n    const name = nameInputRef.current.value;\n    const city = cityInputRef.current.value;\n    const street = streetInputRef.current.value;\n    const postalCode = postalCodeInputRef.current.value;\n    const nameValid = isValid(name);\n    const cityValid = isValid(city);\n    const streetValid = isValid(street);\n    const postalCodeValid = isFiveChar(postalCode);\n    const formIsValid = nameValid && cityValid && streetValid && postalCodeValid;\n    setFormValidity({\n      name: nameValid,\n      city: cityValid,\n      street: streetValid,\n      postalCode: postalCodeValid\n    });\n    if (!formIsValid) {\n      return;\n    }\n\n    //Submit data\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.control} ${formValidity.name ? '' : classes.invalid}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), !formValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Name cannot be empty!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.control} ${formValidity.name ? '' : classes.invalid}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        ref: streetInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), !formValidity.street && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Street cannot be empty!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.control} ${formValidity.name ? '' : classes.invalid}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        ref: postalCodeInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), !formValidity.postalCode && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Postal code must be 5 characters long!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.control} ${formValidity.name ? '' : classes.invalid}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), !formValidity.city && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"City cannot be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(Checkout, \"Rl4liYLarC8oZPJKGg8VSQkWMgk=\");\n_c = Checkout;\nexport default Checkout;\nvar _c;\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"names":["useRef","useState","classes","Checkout","props","formValidity","setFormValidity","name","city","street","postalCode","nameInputRef","streetInputRef","cityInputRef","postalCodeInputRef","isValid","value","trim","isFiveChar","length","confirmHandler","event","preventDefault","current","nameValid","cityValid","streetValid","postalCodeValid","formIsValid","form","control","invalid","actions","onCancel","submit"],"sources":["C:/Users/darsi/OneDrive/Documents/GitHub/Udemy/Food_ordering/01-starting-project/src/components/Cart/Checkout.js"],"sourcesContent":["import { useRef, useState } from 'react';\r\nimport classes from './Checkout.module.css';\r\n\r\nconst Checkout = (props) => {\r\n\r\n  const [formValidity,setFormValidity]=useState({\r\n    name:true,\r\n    city:true,\r\n    street:true,\r\n    postalCode:true\r\n  })\r\n\r\n  const nameInputRef = useRef();\r\n  const streetInputRef = useRef();\r\n  const cityInputRef = useRef();\r\n  const postalCodeInputRef = useRef();\r\n\r\n  const isValid = (value) => value.trim() == '';\r\n  const isFiveChar = (value) => value.trim().length !== 5;\r\n\r\n  const confirmHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const name = nameInputRef.current.value;\r\n    const city = cityInputRef.current.value;\r\n    const street = streetInputRef.current.value;\r\n    const postalCode = postalCodeInputRef.current.value;\r\n\r\n    const nameValid = isValid(name);\r\n    const cityValid = isValid(city);\r\n    const streetValid = isValid(street);\r\n    const postalCodeValid = isFiveChar(postalCode);\r\n\r\n    const formIsValid = nameValid && cityValid && streetValid && postalCodeValid;\r\n\r\n    setFormValidity({\r\n      name:nameValid,\r\n      city:cityValid,\r\n      street:streetValid,\r\n      postalCode:postalCodeValid\r\n    })\r\n\r\n    if(!formIsValid)\r\n    {\r\n      return;\r\n    }\r\n\r\n    //Submit data\r\n  };\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={confirmHandler}>\r\n      <div className={`${classes.control} ${formValidity.name?'':classes.invalid}`}>\r\n        <label htmlFor='name'>Your Name</label>\r\n        <input type='text' id='name' ref={nameInputRef} />\r\n        {!formValidity.name && <p>Name cannot be empty!</p>}\r\n      </div>\r\n      <div className={`${classes.control} ${formValidity.name?'':classes.invalid}`}>\r\n        <label htmlFor='street'>Street</label>\r\n        <input type='text' id='street' ref={streetInputRef} />\r\n        {!formValidity.street && <p>Street cannot be empty!</p>}\r\n      </div>\r\n      <div className={`${classes.control} ${formValidity.name?'':classes.invalid}`}>\r\n        <label htmlFor='postal'>Postal Code</label>\r\n        <input type='text' id='postal' ref={postalCodeInputRef} />\r\n        {!formValidity.postalCode && <p>Postal code must be 5 characters long!</p>}\r\n      </div>\r\n      <div className={`${classes.control} ${formValidity.name?'':classes.invalid}`}>\r\n        <label htmlFor='city'>City</label>\r\n        <input type='text' id='city' ref={cityInputRef} />\r\n        {!formValidity.city && <p>City cannot be empty</p>}\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button type='button' onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button className={classes.submit}>Confirm</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}